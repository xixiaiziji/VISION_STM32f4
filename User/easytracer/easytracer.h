#ifndef EASY_TRACER_H
#define EASY_TRACER_H

#define IMG_X 0	           //图片x坐标
#define IMG_Y 0	           //图片y坐标
#define IMG_W 400          //图片宽度
#define IMG_H 240         //图片高度

#define ALLOW_FAIL_PER 3   //容错率，每1<<ALLOW_FAIL_PER个点允许出现一个错误点，容错率越大越容易识别，但错误率越大
#define ITERATE_NUM    8   //迭代次数，迭代次数越多识别越精确，但计算量越大
#include "stm32f4xx.h"

typedef struct             //判定为的目标条件
{
	uint8_t  H_MIN;    //目标最小色调
	uint8_t  H_MAX;    //目标最大色调	
	
	uint8_t  S_MIN;    //目标最小饱和度  
	uint8_t  S_MAX;    //目标最大饱和度

	uint8_t  L_MIN;    //目标最小亮度  
	uint8_t  L_MAX;    //目标最大亮度

	uint16_t   WIDTH_MIN; //目标最小宽度
	uint16_t   HIGHT_MIN; //目标最小高度

	uint16_t   WIDTH_MAX; //目标最大宽度
	uint16_t   HIGHT_MAX; //目标最大高度
}TARGET_CONDI;

typedef struct             //识别结果
{
	uint16_t x;         //目标的x坐标
	uint16_t y;         //目标的y坐标
	uint16_t w;         //目标的宽度
	uint16_t h;         //目标的高度
}RESULT;


//-----------------------------------------------------------------------------------------
//唯一的API，用户将识别条件写入Condition指向的结构体中，该函数将返回目标的x，y坐标和长宽
//返回1识别成功，返回1识别失败
//-----------------------------------------------------------------------------------------
int Trace(const TARGET_CONDI *Condition,RESULT *Resu);

#endif
